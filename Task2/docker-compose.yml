services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-zookeeper-network

  kafka-prod:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-prod
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka-prod:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-prod:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    networks:
      - kafka-zookeeper-network
      - kafka-producer-network

  kafka-cons:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-cons
    depends_on:
      - zookeeper
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ADVERTISED_HOST_NAME: kafka-cons:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-cons:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    networks:
      - kafka-zookeeper-network
      - kafka-consumer-network

  producer:
    build: ./producer
    depends_on:
      - kafka-prod
    environment:
      KAFKA_BROKER: kafka-prod:29092
    volumes:
      - ./producer:/app
    entrypoint: python3 /app/producer.py
    networks:
      - kafka-producer-network
      - kafka-zookeeper-network

  consumer:
    build: ./consumer
    depends_on:
      - kafka-cons
    environment:
      KAFKA_BROKER: kafka-cons:29093
      DATA_FILE: '/data/scraped_data.json'
    volumes:
      - ./data:/data
      - ./consumer:/app
    entrypoint: python3 /app/consumer.py
    networks:
      - kafka-consumer-network
      - kafka-zookeeper-network
      - rest-api-network
    
  api:
    build: ./rest-api
    depends_on:
      - consumer
    environment:
      DATA_FILE: '/data/scraped_data.json'
    ports:
      - "80:5000"
    volumes:
      - ./data:/data
      - ./rest-api:/app
    entrypoint: python3 /app/api.py
    networks:
      - rest-api-network

networks:
  kafka-producer-network:
    driver: bridge
  kafka-consumer-network:
    driver: bridge
  kafka-zookeeper-network:
    driver: bridge
  rest-api-network:
    driver: bridge

volumes:
  kafka-data:
  consumer-data:
  zookeeper-data: